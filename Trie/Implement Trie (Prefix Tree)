https://leetcode.com/problems/implement-trie-prefix-tree/
Code:

class TrieNode {
    public:    
        vector<TrieNode*> children;
        bool isEnd;
        TrieNode() {
            isEnd = false;
            children.resize(26, NULL);
        }
};

class Trie {
public:
    TrieNode* root;
    Trie() {
        root = new TrieNode();
    }
    
    void insert(string A) {
        TrieNode* temp = root;
        for (int i = 0; i < A.size(); i++) {
            if (temp->children[A[i] - 'a'] == NULL) {
                temp->children[A[i] - 'a'] = new TrieNode();
            }
            temp = temp->children[A[i] - 'a'];
        }
        temp->isEnd = true;
    }
    
    bool search(string A) {
        TrieNode* temp = root;
        for (int i = 0; i < A.size(); i++) {
            if (temp->children[A[i] - 'a'] == NULL) {
                return false;;
            }
            temp = temp->children[A[i] - 'a'];
        }
        return temp->isEnd;    
    }
    
    bool startsWith(string A) {
        TrieNode* temp = root;
        for (int i = 0; i < A.size(); i++) {
            if (temp->children[A[i] - 'a'] == NULL) {
                return false;;
            }
            temp = temp->children[A[i] - 'a'];
        }
        return true; 
    }
};
