https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating/
Code:

Time Complexity- O(N) | Space Complexity- O(1)
class Solution {
public:
    int minFlips(string s) {
        int n = s.size(), ans = n, res0 = 0, res1 = 0;
        
        for (int i = 0; i < 2 * n; i++) {
            if (s[i % n] == '0') {
                res0 += (i % 2 == 1);
                res1 += (i % 2 == 0);
            }
            else {
                res0 += (i % 2 == 0);
                res1 += (i % 2 == 1);
            }
            
            if (i >= n) {
                res0 -= (s[i - n] == '0' && (i - n) % 2 ? 1 : 0);
                res0 -= (s[i - n] == '1' && (i - n) % 2 == 0 ? 1 : 0);
                res1 -= (s[i - n] == '0' && (i - n) % 2 == 0 ? 1 : 0);
                res1 -= (s[i - n] == '1' && (i - n) % 2 ? 1 : 0);
                ans = min({ans, res0, res1});
            }
        }
        
        return ans;
    }
};
