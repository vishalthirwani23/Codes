https://leetcode.com/problems/remove-duplicate-letters/
Code:

Time Complexity- O(N) | Space Complexity- O(1)
class Solution {
public:
    string removeDuplicateLetters(string s) {
        int n = s.size();
        string ans;
        vector<int> count(26, 0);
        vector<bool> present(26, false);
        
        for (int i = 0; i < n; i++) {
            count[s[i] - 'a']++;
        }
        for (int i = 0; i < n; i++) {
            count[s[i] - 'a']--;
            if (present[s[i] - 'a']) {
                continue;
            }
            
            while (ans.size() && ans.back() > s[i] && count[ans.back() - 'a']) {
                present[ans.back() - 'a'] = false;
                ans.pop_back();
            }
            ans += s[i];
            present[s[i] - 'a'] = true;
        }
        
        return ans;
    }
};


   
