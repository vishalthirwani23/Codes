https://leetcode.com/problems/basic-calculator/
Code:

Time Complexity- O(N) | Space Complexity- O(N)
class Solution {
public:
    int calculate(string s) {
        int n = s.size(), sum = 0, sign = 1;
        stack<int> st;
        
        for (int i = 0; i < n; i++) {
            if (isdigit(s[i])) {
                int val = 0;
                while (i < n && isdigit(s[i])) {
                    val = val * 10 + (int)(s[i] - '0');
                    i++;
                }
                i--;
                sum += sign * val;
                sign = 1;
            }
            else if (s[i] == '(') {
                st.push(sum);
                st.push(sign);
                sign = 1;
                sum = 0;
            }
            else if (s[i] == ')') {
                sum *= st.top();
                st.pop();
                sum += st.top();
                st.pop();
                sign = 1;
            }
            else if (s[i] == '-') {
                sign *= -1;
            }
        }
        
        return sum;
    }
};
