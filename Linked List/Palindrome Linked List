https://leetcode.com/problems/palindrome-linked-list/
Code:
 
Time Complexity - O(N) | Space Complexity - O(1)
class Solution {
public:
    bool isSame(ListNode* l1, ListNode* l2) {
        while (l1) {
            if (l1->val != l2->val)
                return false;
            l1 = l1->next;
            l2 = l2->next;
        }
        return true;
    }
    bool isPalindrome(ListNode* head) {
        if (head == NULL || head->next == NULL) return true;
        ListNode *slow = head, *fast = head, *prev = NULL, *next;
        
        while (fast && fast->next) {
            fast = fast->next->next;
            next = slow->next;
            slow->next = prev;
            prev = slow;
            slow = next;
        }
        if (fast)
            slow = slow->next;
        
        return isSame(prev, slow);
    }
};
