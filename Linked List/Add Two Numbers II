https://leetcode.com/problems/add-two-numbers-ii/
Code:

Time Complexity - O(max(len1, len2)) | Space Complexity - O(1)
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        stack<int> num1, num2;
        ListNode *temp1 = l1, *temp2 = l2, *node, *present = new ListNode;
        int sum, carry = 0;
        
        while (temp1) {
            num1.push(temp1->val);
            temp1 = temp1->next; 
        }
        while (temp2) {
            num2.push(temp2->val);
            temp2 = temp2->next; 
        }
        
        while (!num1.empty() || !num2.empty()) {
            sum = (num1.empty() ? 0 : num1.top()) + (num2.empty() ? 0 : num2.top()) + carry;
            carry = sum / 10;
            sum %= 10;
            present->val = sum;
            node = new ListNode(1);
            node->next = present;
            present = node;
            if (!num1.empty())
                num1.pop();
            if (!num2.empty())
                num2.pop();
        }
        
        if (carry)
            return present;
        else
            return present->next;
    }
};
