https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/
Code:

Time Complexity - O(N) | Space Complexity - O(1)
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL || head->next == NULL) return head;
        ListNode *curr = head, *dummy = new ListNode(101), *prev = dummy;
        
        while (curr) {
            int cnt = 0;
            while (curr->next != NULL && curr->next->val == curr->val) {
                cnt++;
                curr = curr->next;
            }
            if (!cnt) {
                prev->next = curr;
                prev = curr;
            }
            curr = curr->next;  
        }
        prev->next = NULL;
        
        return dummy->next;
    }
};


 
