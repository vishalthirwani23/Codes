https://leetcode.com/problems/single-element-in-a-sorted-array/
Code:

Time Complexity- O(logN) | Space Complexity- O(1)
class Solution {
public:
    int singleNonDuplicate(vector<int>& A) {
        int n = A.size(), low = 0, high = n - 1, mid;
        
        while (low < high) {
            mid = low + (high - low) / 2;
            if (mid % 2 == 1) {
                mid--;
            }
            if (A[mid] == A[mid + 1]) {
                low = mid + 2;
            }
            else {
                high = mid;
            }
        }
        
        return A[low];
    } 
};


