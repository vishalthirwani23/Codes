https://www.interviewbit.com/problems/allocate-books/
Code:

Time Complexity- O(N * log(S) | Space Complexity- O(1) // S = Sum of all elements of A
bool check(int val, vector<int>& A, int n, int B) {
    int res = 1, pages = 0;
    
    for (int i = 0; i < n; i++) {
        if (A[i] + pages <= val) {
            pages += A[i];
        }
        else {
            pages = A[i];
            res++;
        }
    }
    
    return res <= B;
}

int Solution::books(vector<int> &A, int B) {
    int n = A.size(), start, end = 0, mid, ans;
    start = *max_element(A.begin(), A.end());
    
    if (B > n) {
        return -1;
    }
    for (int i = 0; i < n; i++) {
        end += A[i];    
    }
    
    while (start <= end) {
        mid = start + (end - start) / 2;
        if (check(mid, A, n, B)) {
            ans = mid;
            end = mid - 1;
        }
        else {
            start = mid + 1;
        }
    }
    
    return ans;
}
