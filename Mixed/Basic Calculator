https://leetcode.com/problems/basic-calculator/
Code:

Time Complexity - O(N) | Space Complexity - O(N) 
class Solution {
public:
    int calculate(string s) {
        int ans = 0;
        vector<int> sign(2, 1);
        for(int i = 0; i < s.length(); i++){
            if(isdigit(s[i]) == true){
                int number = 0;
                while (i < s.length()  &&  isdigit(s[i]) == true)
                    number = 10 * number + (s[i++] - '0');
                ans += sign.back() * number;
                sign.pop_back();
                i--;
            }
            else if (s[i] == ')')    
                sign.pop_back();
            else if (s[i] == '(' || s[i] == '+' || s[i] == '-')
                sign.push_back(sign.back() * (s[i] == '-' ? -1 : 1));
        }
        return ans;
    }
};
