https://leetcode.com/problems/find-k-th-smallest-pair-distance/
Code:

Time Complexity - O(NlogD + NlogN) | Space Complexity - O(1)
class Solution {
public:
    int smallestDistancePair(vector<int>& nums, int k) {
        sort(nums.begin(), nums.end());
        int n = nums.size(), l = 0, r = nums[n - 1] - nums[0], m, count;
        
        while (l < r) {
            m = l + (r - l) / 2;
            count = 0;
            for (int i = 0, j = 0; i < n; i++) {
                while (j < n && nums[j] - nums[i] <= m) {
                    j++;
                }
                count += j - i - 1;
            }
            if (count < k) {
                l = m + 1;
            }
            else {
                r = m;    
            }
        }
        
        return l;
    }
};
