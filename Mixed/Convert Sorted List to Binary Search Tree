https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/
Code:

Time Complexity O(nlogn) | Space Complexty | O(logn)
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        if (head == NULL) {
            return NULL;
        }
        
        ListNode *slow, *fast, *back = NULL;
        TreeNode *node = new TreeNode();
        
        slow = fast = head;
        while (fast && fast->next) {
            back = slow;
            slow = slow->next;
            fast = fast->next->next;
        }
        node->val = slow->val;
        node->right = sortedListToBST(slow->next);
        if (back == NULL) {
            node->left = NULL;
        }
        else {
            back->next = NULL;
            node->left = sortedListToBST(head);
        }
        
        return node;
    }
};
        
        
    
