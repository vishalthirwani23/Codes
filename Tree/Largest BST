https://practice.geeksforgeeks.org/problems/largest-bst/1
Code:

pair<pair<bool,int>,pair<int,int>> helper(Node *root){
    if(root==NULL) return {{1,0},{0,0}};
    pair<pair<bool,int>,pair<int,int>> left=helper(root->left);
    pair<pair<bool,int>,pair<int,int>> right=helper(root->right);
    bool l=root->left?(root->data>left.second.second):1;
    bool r=root->right?(root->data<right.second.first):1;
    int cur_min=root->left?left.second.first:root->data;
    int cur_max=root->right?right.second.second:root->data;
    if(l && r && left.first.first && right.first.first)
       return {{1,left.first.second+right.first.second+1},{cur_min,cur_max}};
       return {{0,max(left.first.second,right.first.second)},{0,0}};
}

int largestBst(Node *root)
{
	return helper(root).first.second;
}
