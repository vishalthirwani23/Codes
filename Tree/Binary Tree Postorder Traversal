https://leetcode.com/problems/binary-tree-postorder-traversal/
Code:

class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> ans;
        stack<TreeNode*> s;
        while(s.empty()==false || root!=NULL){
            if(root!=NULL){
                s.push(root);
                root=root->left;
            }
            else{
                root=s.top()->right;
                if(root==NULL){
                    root=s.top();
                    ans.push_back(root->val);
                    s.pop();
                    while(!s.empty() && s.top()->right==root){
                        root=s.top();
                        ans.push_back(root->val);
                        s.pop();
                    }
                    if(!s.empty())
                        root=s.top()->right;
                    else
                        root=NULL;
                }        
            }
        }
        return ans;
    }
};




