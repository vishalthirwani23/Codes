https://leetcode.com/problems/binary-tree-inorder-traversal/submissions/
Code:

Time Complexity- O(N) | Space Complexity- O(1)
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> nodes;
        
        while (root) {
            if (root->left) {
                TreeNode* node = root->left;
                while (node->right && node->right != root) {
                    node = node->right;
                }
                if (!node->right) {
                    node->right = root;
                    root = root->left;
                }
                else {
                    node->right = NULL;
                    nodes.push_back(root->val);
                    root = root->right;
                }
            }
            else {
                nodes.push_back(root->val);
                root = root->right;
            }
        }
        
        return nodes;
    }
};
