https://leetcode.com/problems/binary-tree-level-order-traversal/
Code:

Time Complexity- O(N) |  Space Complexity- O(N)
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if (!root) {
            return {};
        }
        vector<vector<int>> nodes;
        queue<TreeNode*> level;
        int sz;
        TreeNode* node;
        
        level.push(root);
        while (!level.empty()) {
            nodes.push_back({});
            sz = level.size();
            
            while (sz--) {
                node = level.front();
                level.pop();
                nodes.back().push_back(node->val);
                if (node->left) {
                    level.push(node->left);
                }
                if (node->right) {
                    level.push(node->right);
                }
            }
        }
        
        return nodes;
    }
};
