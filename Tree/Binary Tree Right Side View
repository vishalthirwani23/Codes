https://leetcode.com/problems/binary-tree-right-side-view/
Code:

Time Complexity- O(N) | Space Complexity- O(H)
class Solution {
public:
    void helper(vector<int>& ans, int curLevel, int& maxLevel, TreeNode* root) {
        if (root == NULL) {
            return; 
        }    
        if (curLevel > maxLevel) {
            ans.push_back(root->val);
            maxLevel = curLevel;
        }
         helper(ans, curLevel + 1, maxLevel, root->right);
         helper(ans, curLevel + 1, maxLevel, root->left);
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        int curLevel = 1, maxLevel = 0;
        helper(ans, curLevel, maxLevel, root);
        return ans;
    }
};

