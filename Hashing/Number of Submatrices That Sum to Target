https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/
Code:

Time Complexity - O(M * N * N) | Space Complexity - O(M)
class Solution {
public:
    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        int ans = 0, m = matrix.size(), n = matrix[0].size(), cur;
        unordered_map<int, int> counter;
        
        for (int i = 0; i < m; i++) {
            for (int j = 1; j < n; j++) {
                matrix[i][j] += matrix[i][j - 1];
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                counter = {{0, 1}};
                cur = 0;
                for (int k = 0; k < m; k++) {
                    cur += matrix[k][j] - (i == 0 ? 0 : matrix[k][i - 1]);
                    ans += (counter.find(cur - target) == counter.end() ? 0 : counter[cur - target]);
                    counter[cur]++;
                }
            }
        }
        
        return ans;
    }
};
