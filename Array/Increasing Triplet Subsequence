https://leetcode.com/problems/increasing-triplet-subsequence/
Code : 

Time Complexity - O(N) | Space Complexity - O(N) 
class Solution {
public:
    bool increasingTriplet(vector<int>& nums) {
        int n = nums.size();
        vector<int> small(n), big(n);
        small[0] = INT_MAX;
        big[n-1] = INT_MIN;
        for(int i = 1; i < n; i++){
            small[i] = min(small[i-1], nums[i-1]);
        }
        for(int i = n-2; i >= 0; i--){
            big[i] = max(big[i+1], nums[i+1]);
        }
        for(int i = 1; i < n-1; i++){
            if(small[i] < nums[i] && nums[i] < big[i])
                return true;
        }
        return false;
    }
};

Time Complexity - O(N) | Space Complexity - O(1) 
class Solution {
public:
    bool increasingTriplet(vector<int>& nums) {
        int n = nums.size(), small = INT_MAX, big = INT_MAX;
        for (int num : nums) {
            if(num <= small) small = num;
            else if(num <= big) big = num;
            else return true;
        }
        return false;
    }
};
