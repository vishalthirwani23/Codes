https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/
Code:

class Solution {
public:
    int maxProfit(int k, vector<int>& prices) {
        int n = prices.size(), ans = 0;
        if(n <= 1 || k == 0) return 0;
        if(k >= n/2){
            for(int i = 1; i < n; i++){
                if(prices[i] > prices[i-1])
                    ans += prices[i] - prices[i - 1];
            }
            return ans;
        }
        else{
            vector<int> buy(k, INT_MIN), sell(k, INT_MIN);
            for(int i = 0; i < n; i++){
                for(int j = 0; j < k; j++){
                    buy[j] = max(buy[j], j > 0 ? sell[j - 1] - prices[i] : -prices[i]);
                    sell[j] = max(sell[j], buy[j] + prices[i]);
                }
            }
            return sell[k-1];
        }
        return 0;
    }
};
