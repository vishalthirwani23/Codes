https://leetcode.com/problems/is-graph-bipartite/
Code:

Time Complexity- O(V + E) | Space Complexity- O(V + E)
class Solution {
public:
    bool checkForBipartite(vector<vector<int>>& graph, vector<int>& color, int node, int c) {
        if (color[node] != -1) {
            return color[node] == c;
        }
        color[node] = c;
        for (auto adj: graph[node]) {
            if (!checkForBipartite(graph, color, adj, 1 - c)) {
                return false;
            }
        }
        
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> color(n, -1);
        
        for (int i = 0; i < n; i++) {
            if (color[i] == -1) {
                if (!checkForBipartite(graph, color, i, 0)) {
                    return false;
                }
            }    
        }
        
        return true;
    }
};
