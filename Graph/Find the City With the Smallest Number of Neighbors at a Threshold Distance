https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/
Code:

Time Complexity - O(N^3) | Space Complexity - O(N^2)
class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        int ans, reachable = 100;
        vector<vector<int>> dist(n, vector<int>(n, 10001));
        for(int i = 0; i < n; i++) dist[i][i] = 0;
        for(vector<int>& edge : edges){
            dist[edge[0]][edge[1]] = edge[2];
            dist[edge[1]][edge[0]] = edge[2];
        }
        for(int k = 0; k < n; k++){
            for(int i = 0; i < n; i++){
                for(int j = 0; j < n; j++){
                    dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);
                }
            }
        }
        for(int i = 0; i < n; i++){
            int count = 0;
            for(int j = 0; j < n; j++){
                if(dist[i][j] <= distanceThreshold) count++;
            }    
            if(count <= reachable){
                reachable = count;
                ans = i;
            }
        } 
        return ans;
    }
};
