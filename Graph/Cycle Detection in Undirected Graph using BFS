Time Complexity- O(V + E) | Space Complexity- O(V + E) 
bool checkForCycle(vector<int> adj[], vector<bool>& visited, int s) {
    queu<pair<int, int>> q;
    int node, par;
    
    visited[s] = true;
    q.push({s, -1});
    
    while (!q.empty()) {
        node = q.front().first;
        par = q.front().second;
        q.pop();
        
        for (int i = 0; i < adj[node].size(); i++) {
            if (visited[adj[node][i]] && adj[node][i] != par) {
                return true;
            }
            if (!visited[adj[node][i]]) {
                visited[adj[node][i]] = true;
                q.push({adj[node][i], node});
            }
        }
    }
    
    return false;
}

bool isCycle(vector<int> adj[], int V) {
    vector<bool> visited(V + 1, false);
    for (int i = 1; i <= V; i++) {
        if (!visited[i]) {
            if (checkForCycle(adj, visited, i)) {
                return true;
            }
        }    
    }
    
    return false;
}
