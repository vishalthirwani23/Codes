https://leetcode.com/problems/valid-square/
Code:

Time Complexity - O(1) | Space Complexity O(1)
class Solution {
public:
    int distance(vector<int>& p1, vector<int>& p2){
        return (p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]);
    }
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        if(p1 == p2 || p1 == p3 || p1 == p4 || p2 == p3  || p2 == p4 || p3 == p4) return false;
        map<int, int> m;
        m[distance(p1, p2)]++;
        m[distance(p1, p3)]++;
        m[distance(p1, p4)]++;
        m[distance(p2, p3)]++;
        m[distance(p2, p4)]++;
        m[distance(p3, p4)]++;
        return m.begin()->second == 4 && m.rbegin()->second == 2 && 2 * m.begin()->first == m.rbegin()->first;
    }
};
