https://leetcode.com/problems/jump-game-iii/
Code:

class Solution {
public:
    bool canReach(vector<int>& arr, int start) {
        int n = arr.size(), index, index1, index2;
        vector<bool> visited(n, false);
        queue<int> q;
        q.push(start);
        visited[start] = true;
        while(q.empty() == false){
            index = q.front();
            index1 = index + arr[index];
            index2 = index - arr[index];
            q.pop();
            if(index1 < n && arr[index1] == 0) return true;
            if(index2 >= 0 && arr[index2] == 0) return true;
            if(index1 < n && visited[index1] == false){
                visited[index1] = true;
                q.push(index1);
            }
            if(index2 >= 0 && visited[index2] == false){
                visited[index2] = true;
                q.push(index2);
            }
        }
        return false;
    }
};

