https://leetcode.com/problems/k-inverse-pairs-array/
Code:

Time Complexity- O(N * K) | Space Complexity- O(N * K)
class Solution {
public:
    int kInversePairs(int n, int k) {
        int mod = 1e9 + 7;
        vector<vector<long long>> dp(n + 1, vector<long long> (k + 1, 0));
        
        for (int i = 1; i <= n; i++) {
            dp[i][0] = 1;
        }
        for (int i = 2; i <= n; i++) {
            for (int j = 1; j <= k; j++) {
                dp[i][j] = (dp[i][j - 1] % mod + dp[i - 1][j] % mod - (j >= i ? dp[i - 1][j - i] : 0)  % mod);
                dp[i][j] += mod;
                dp[i][j] %= mod;
            }
        }
        
        return dp[n][k];
    }
};
