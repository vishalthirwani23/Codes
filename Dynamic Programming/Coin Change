https://leetcode.com/problems/coin-change/
Code:

Time Complexity- O(N * Amount) | Space Complexity- O(Amount)
class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        int n = coins.size();
        vector<int> dp(amount + 1, amount + 1);
        
        dp[0] = 0;
        for (int i = 0; i < n; i++) {
            for (int j = coins[i]; j <= amount; j++) {
                if (i == 0) {
                    dp[j] = 1 + dp[j - coins[i]];
                }
                else {
                     dp[j] = min(dp[j], 1 + dp[j - coins[i]]);    
                }    
            }
        }
        
        return dp[amount] > amount ? -1 : dp[amount];
    }
};

   


   
