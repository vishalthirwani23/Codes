https://leetcode.com/problems/maximal-rectangle/
Code:

class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.empty()) return 0;
        int m=matrix.size(),n=matrix[0].size(),ans=0;
        vector<int> height(n,0),left(n,0),right(n,n-1);
        for(int i=0;i<m;i++){
            int lb=0,rb=n-1;
            for(int j=0;j<n;j++){
                if(matrix[i][j]=='1'){
                    height[j]++;
                }
                else{
                    height[j]=0;
                }
            }
            
            for(int j=0;j<n;j++){
                if(matrix[i][j]=='1'){
                    left[j]=max(lb,left[j]);
                }
                else{
                    left[j]=0;
                    lb=j+1;
                }
            }
            
            for(int j=n-1;j>=0;j--){
                if(matrix[i][j]=='1'){
                    right[j]=min(rb,right[j]);
                }
                else{
                    right[j]=n-1;
                    rb=j-1;
                }
            }
            
            for(int j=0;j<n;j++){
                ans=max(ans,(right[j]-left[j]+1)*height[j]);
            }
            
        }
        return ans;
    }
};
