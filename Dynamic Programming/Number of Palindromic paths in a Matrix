https://practice.geeksforgeeks.org/problems/number-of-palindromic-paths-in-a-matrix/0
Code:

#include<bits/stdc++.h>
using namespace std;
int helper(int sx,int sy,int ex,int ey,vector<vector<char>>& v,int m,int n,int dp[20][20][20][20]){
    if(dp[sx][sy][ex][ey]!=-1) return dp[sx][sy][ex][ey];
    if(v[sx][sy]!=v[ex][ey]) return dp[sx][sy][ex][ey]=0;
    if(sx>ex || sy>ey) return dp[sx][sy][ex][ey]=0;
    if(sx==ex && (ey-sy)<=1) return dp[sx][sy][ex][ey]=1;
    if(ex-sx==1 && sy==ey) return dp[sx][sy][ex][ey]=1;
    if(ex-sx==1 && sy+1==ey) return dp[sx][sy][ex][ey]=2;
    int res=0;
    res+=helper(sx+1,sy,ex-1,ey,v,m,n,dp);
    res+=helper(sx+1,sy,ex,ey-1,v,m,n,dp);
    res+=helper(sx,sy+1,ex-1,ey,v,m,n,dp);
    res+=helper(sx,sy+1,ex,ey-1,v,m,n,dp);
    
    return dp[sx][sy][ex][ey]=res;
}
int main()
 {
	int t;
	cin>>t;
	while(t--){
	int m,n;
	cin>>m>>n;
	vector<vector<char>> v(m,vector<char>(n));
	for(int i=0;i<m;i++)
	for(int j=0;j<n;j++)
	cin>>v[i][j];
	int dp[20][20][20][20];
	memset(dp,-1,sizeof(dp));
	helper(0,0,m-1,n-1,v,m,n,dp);
	cout<<dp[0][0][m-1][n-1]<<"\n";
	}
	return 0;
}
