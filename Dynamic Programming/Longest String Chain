https://leetcode.com/problems/longest-string-chain/
Code:

Time Complexity- O(NSS) | Space Complexity- O(NS + S)
class Solution {
public:
    static bool cmp(string s1, string s2) {
        return s1.size() < s2.size();    
    }
    
    int longestStrChain(vector<string>& words) {
        int n = words.size(), ans = 1;
        unordered_map<string, int> dp;
        string pre;
        
        sort(words.begin(), words.end(), cmp);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < words[i].size(); j++) {
                pre = words[i].substr(0, j) + words[i].substr(j + 1);
                dp[words[i]] = max(dp[words[i]], (dp.find(pre) == dp.end() ? 0 : dp[pre]) + 1); 
            }
            ans = max(ans, dp[words[i]]);
        }
        
        return ans;
    }
};
